DROP DATABASE IF EXISTS PASTELERIA;
CREATE DATABASE PASTELERIA;
USE PASTELERIA;

CREATE TABLE USUARIO (
    ID_USUARIO INT NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(45) NOT NULL COMMENT 'Nombre del USUARIO',
    APELLIDOS VARCHAR(50) NOT NULL COMMENT 'Apellidos del USUARIO',
    DIRECCION VARCHAR(45) NOT NULL COMMENT 'Direccion del USUARIO',
    TELEFONO VARCHAR(15) NOT NULL COMMENT 'Telefono del USUARIO',
    EMAIL VARCHAR(45) NOT NULL COMMENT 'Correo electronico del USUARIO',
    CONTRASENIA VARCHAR(255) NOT NULL COMMENT 'Contrase√±a del USUARIO',
    FECHA_NAC DATE NOT NULL COMMENT 'Fecha de nacimiento del USUARIO',
    ES_USUARIO TINYINT(1) NOT NULL,
    ES_EMPLEADO TINYINT(1) NOT NULL,
    CONSTRAINT PK_USUARIO PRIMARY KEY (ID_USUARIO)
);

select * from usuario;

CREATE TABLE REGISTRO_HORARIO (
    ID_REGISTRO_HORARIO INT NOT NULL AUTO_INCREMENT,
    FECHA_ENTRADA DATETIME NOT NULL COMMENT 'Fecha de entrada del empleado',
    FECHA_SALIDA DATETIME NOT NULL COMMENT 'Fecha de salida del empleado',
    ID_USUARIO INT,
    CONSTRAINT PK_REGISTRO PRIMARY KEY (ID_REGISTRO_HORARIO),
    CONSTRAINT FK_USUARIO_REGISTRO_HORARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PRODUCTO (
    ID_PRODUCTO INT NOT NULL AUTO_INCREMENT COMMENT 'Primary Key de Producto',
    NOMBRE VARCHAR(45) NOT NULL COMMENT 'Nombre del producto',
    DESCRIPCION VARCHAR(255) NOT NULL COMMENT 'Descripcion sobre el producto',
    PRECIO DECIMAL(8,2) NOT NULL COMMENT 'Precio del producto',
    STOCK INT NOT NULL COMMENT 'Stock del producto',
    CATEGORIA VARCHAR(45) NOT NULL COMMENT 'Categoria del producto',
    ID_USUARIO INT NOT NULL,
    CONSTRAINT PK_PRODUCTO PRIMARY KEY (ID_PRODUCTO),
    CONSTRAINT FK_USUARIO_PRODUCTO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO) ON DELETE CASCADE ON UPDATE CASCADE
);

select * from producto;
INSERT INTO PRODUCTO (NOMBRE, DESCRIPCION, PRECIO, STOCK, CATEGORIA, ID_USUARIO)
	VALUES ('Tarta de queso', 'Tarta de la abuela', 12.80 , 3, 'Tartas', 1);
INSERT INTO PRODUCTO (NOMBRE, DESCRIPCION, PRECIO, STOCK, CATEGORIA, ID_USUARIO)
	VALUES ('Tarta de CHOCOLATE', 'Tarta de la abuela', 12.80 , 3, 'Tartas', 1);
INSERT INTO PRODUCTO (NOMBRE, DESCRIPCION, PRECIO, STOCK, CATEGORIA, ID_USUARIO)
	VALUES ('Tarta de YOGURT', 'Tarta de la abuela', 12.80 , 3, 'Tartas', 1);

CREATE TABLE PEDIDO (
    ID_PEDIDO INT NOT NULL AUTO_INCREMENT COMMENT 'Primary key de Pedido',
    ESTADO ENUM('PENDIENTE', 'ENTREGADO', 'CANCELADO') NOT NULL COMMENT 'Estado del pedido',
    ID_PRODUCTO INT NOT NULL,
    ID_USUARIO INT NOT NULL,
    CONSTRAINT PK_PEDIDO PRIMARY KEY (ID_PEDIDO),
    CONSTRAINT FK_PRODUCTO_PEDIDO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO (ID_PRODUCTO) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_USUARIO_PEDIDO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO) ON DELETE CASCADE ON UPDATE CASCADE
);

ALTER TABLE Pedido ADD COLUMN CANTIDAD INT NOT NULL;

CREATE TABLE INGREDIENTE (
    ID_INGREDIENTE INT NOT NULL AUTO_INCREMENT COMMENT 'Primary Key de Ingrediente',
    NOMBRE VARCHAR(45) NOT NULL COMMENT 'Nombre del ingrediente',
    PRECIO DECIMAL(8,2) NOT NULL COMMENT 'Precio del ingrediente',
    STOCK INT NOT NULL COMMENT 'Stock sobre el ingrediente',
    FABRICANTE VARCHAR(45) NOT NULL COMMENT 'Fabricante del ingrediente',
    ID_PRODUCTO INT,
    CONSTRAINT PK_INGREDIENTE PRIMARY KEY (ID_INGREDIENTE),
    CONSTRAINT FK_INGREDIENTE_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO (ID_PRODUCTO)
);

CREATE TABLE INGREDIENTE_PRODUCTO (
    ID_INGREDIENTE_PRODUCTO INT NOT NULL AUTO_INCREMENT,
    ID_INGREDIENTE INT NOT NULL,
    ID_PRODUCTO INT NOT NULL,
    CONSTRAINT PK_ID_INGREDIENTE_PRODUCTO PRIMARY KEY (ID_INGREDIENTE_PRODUCTO),
    CONSTRAINT FK_INGREDIENTE_INGREDIENTE_PRODUCTO FOREIGN KEY (ID_INGREDIENTE) REFERENCES INGREDIENTE (ID_INGREDIENTE) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCTO_INGREDIENTE_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO (ID_PRODUCTO) ON DELETE CASCADE ON UPDATE CASCADE
);





